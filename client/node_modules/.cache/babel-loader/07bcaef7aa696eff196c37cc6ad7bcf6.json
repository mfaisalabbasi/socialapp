{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\social\\\\socialapp\\\\client\\\\src\\\\components\\\\profile-form\\\\EditProfile.js\";\n// import React, { useState, Fragment, useEffect } from 'react';\n// import { Link, withRouter } from 'react-router-dom';\n// import { createProfile, getCurrentUser } from '../../actions/profile';\n// import { useDispatch, useSelector } from 'react-redux';\n// const EditProfile = () => {\n//   const [formData, setFormData] = useState({\n//     company: '',\n//     website: '',\n//     location: '',\n//     status: '',\n//     skills: '',\n//     githubusername: '',\n//     bio: '',\n//     twitter: '',\n//     facebook: '',\n//     youtube: '',\n//     linkedin: '',\n//     instagram: ''\n//   });\n//   const [dispaySocialLink, toggleSocialLink] = useState(false);\n//   const getProfile = useSelector(state=>state.profile);\n//   const {profile,loading} = getProfile;\n//   const dispatch = useDispatch(() => createProfile(), () => getCurrentUser());\n//   useEffect(\n//     () => {\n//     dispatch(getCurrentUser());\n//     setFormData({\n//       company: loading || !profile.company ? '' : profile.company,\n//       website: loading || !profile.website ? '' : profile.website,\n//       location: loading || !profile.location ? '' : profile.location,\n//       status: loading || !profile.status ? '' : profile.status,\n//       skills: loading || !profile.skills ? '' : profile.skills.join(','),\n//       githubusername:\n//         loading || !profile.githubusername ? '' : profile.githubusername,\n//       bio: loading || !profile.bio ? '' : profile.bio,\n//       twitter: loading || !profile.social ? '' : profile.social.twitter,\n//       facebook: loading || !profile.social ? '' : profile.social.facebook,\n//       linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n//       instagram: loading || !profile.social ? '' : profile.social.instagram,\n//       youtube: loading || !profile.social ? '' : profile.social.youtube\n//     });\n//   }, [loading]);\n//   //destructuring\n//   const {\n//     company,\n//     website,\n//     location,\n//     status,\n//     skills,\n//     githubusername,\n//     bio,\n//     twitter,\n//     facebook,\n//     linkedin,\n//     instagram,\n//     youtube\n//   } = formData;\n//   const onChange = e => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n//   const onSubmit = e => {\n//     e.preventDefault();\n//     dispatch(createProfile(formData, true));\n//   };\n//   return (\n//     <Fragment>\n//       <h1 className='large text-primary'>Create Your Profile</h1>\n//       <p className='lead'>\n//         <i className='fas fa-user'></i> Let's get some information to make your\n//         profile stand out\n//       </p>\n//       <small></small>\n//       <form className='form' onSubmit={e => onSubmit(e)}>\n//         <div className='form-group'>\n//           <select name='status' value={status} onChange={e => onChange(e)}>\n//             <option value='0'>* Select Professional Status</option>\n//             <option value='Developer'>Developer</option>\n//             <option value='Junior Developer'>Junior Developer</option>\n//             <option value='Senior Developer'>Senior Developer</option>\n//             <option value='Manager'>Manager</option>\n//             <option value='Student or Learning'>Student or Learning</option>\n//             <option value='Instructor'>Instructor or Teacher</option>\n//             <option value='Intern'>Intern</option>\n//             <option value='Other'>Other</option>\n//           </select>\n//           <small className='form-text'>\n//             Give us an idea of where you are at in your career\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <input\n//             type='text'\n//             placeholder='Company'\n//             name='company'\n//             value={company}\n//             onChange={e => onChange(e)}\n//           />\n//           <small className='form-text'>\n//             Could be your own company or one you work for\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <input\n//             type='text'\n//             placeholder='Website'\n//             name='website'\n//             value={website}\n//             onChange={e => onChange(e)}\n//           />\n//           <small className='form-text'>\n//             Could be your own or a company website\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <input\n//             type='text'\n//             placeholder='Location'\n//             name='location'\n//             value={location}\n//             onChange={e => onChange(e)}\n//           />\n//           <small className='form-text'>\n//             City & state suggested (eg. Boston, MA)\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <input\n//             type='text'\n//             placeholder='* Skills'\n//             name='skills'\n//             value={skills}\n//             onChange={e => onChange(e)}\n//           />\n//           <small className='form-text'>\n//             Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <input\n//             type='text'\n//             placeholder='Github Username'\n//             name='githubusername'\n//             value={githubusername}\n//             onChange={e => onChange(e)}\n//           />\n//           <small className='form-text'>\n//             If you want your latest repos and a Github link, include your\n//             username\n//           </small>\n//         </div>\n//         <div className='form-group'>\n//           <textarea\n//             placeholder='A short bio of yourself'\n//             name='bio'\n//             value={bio}\n//             onChange={e => onChange(e)}\n//           ></textarea>\n//           <small className='form-text'>Tell us a little about yourself</small>\n//         </div>\n//         <div className='my-2'>\n//           <button\n//             type='button'\n//             className='btn btn-light'\n//             onClick={() => toggleSocialLink(!dispaySocialLink)}\n//           >\n//             Add Social Network Links\n//           </button>\n//           <span>Optional</span>\n//         </div>\n//         {dispaySocialLink && (\n//           <Fragment>\n//             <div className='form-group social-input'>\n//               <i className='fab fa-twitter fa-2x'></i>\n//               <input\n//                 type='text'\n//                 placeholder='Twitter URL'\n//                 name='twitter'\n//                 value={twitter}\n//                 onChange={e => onChange(e)}\n//               />\n//             </div>\n//             <div className='form-group social-input'>\n//               <i className='fab fa-facebook fa-2x'></i>\n//               <input\n//                 type='text'\n//                 placeholder='Facebook URL'\n//                 name='facebook'\n//                 value={facebook}\n//                 onChange={e => onChange(e)}\n//               />\n//             </div>\n//             <div className='form-group social-input'>\n//               <i className='fab fa-youtube fa-2x'></i>\n//               <input\n//                 type='text'\n//                 placeholder='YouTube URL'\n//                 name='youtube'\n//                 value={youtube}\n//                 onChange={e => onChange(e)}\n//               />\n//             </div>\n//             <div className='form-group social-input'>\n//               <i className='fab fa-linkedin fa-2x'></i>\n//               <input\n//                 type='text'\n//                 placeholder='Linkedin URL'\n//                 name='linkedin'\n//                 value={linkedin}\n//                 onChange={e => onChange(e)}\n//               />\n//             </div>\n//             <div className='form-group social-input'>\n//               <i className='fab fa-instagram fa-2x'></i>\n//               <input\n//                 type='text'\n//                 placeholder='Instagram URL'\n//                 name='instagram'\n//                 value={instagram}\n//                 onChange={e => onChange(e)}\n//               />\n//             </div>\n//           </Fragment>\n//         )}\n//         <input type='submit' className='btn btn-primary my-1' />\n//         <Link className='btn btn-light my-1' to='/dashboard'>\n//           Go Back\n//         </Link>\n//       </form>\n//     </Fragment>\n//   );\n// };\n// const mapStateToProps = state=>({\n//   profile:state.profile\n// })\n// export default withRouter(EditProfile);\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport InputGroup from '../common/InputGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nclass CreateProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displaySocialInputs: false,\n      handle: '',\n      company: '',\n      website: '',\n      location: '',\n      status: '',\n      skills: '',\n      githubusername: '',\n      bio: '',\n      twitter: '',\n      facebook: '',\n      linkedin: '',\n      youtube: '',\n      instagram: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    if (nextProps.profile.profile) {\n      const profile = nextProps.profile.profile; // Bring skills array back to CSV\n\n      const skillsCSV = profile.skills.join(','); // If profile field doesnt exist, make empty string\n\n      profile.company = !isEmpty(profile.company) ? profile.company : '';\n      profile.website = !isEmpty(profile.website) ? profile.website : '';\n      profile.location = !isEmpty(profile.location) ? profile.location : '';\n      profile.githubusername = !isEmpty(profile.githubusername) ? profile.githubusername : '';\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\n      profile.twitter = !isEmpty(profile.social.twitter) ? profile.social.twitter : '';\n      profile.facebook = !isEmpty(profile.social.facebook) ? profile.social.facebook : '';\n      profile.linkedin = !isEmpty(profile.social.linkedin) ? profile.social.linkedin : '';\n      profile.youtube = !isEmpty(profile.social.youtube) ? profile.social.youtube : '';\n      profile.instagram = !isEmpty(profile.social.instagram) ? profile.social.instagram : ''; // Set component fields state\n\n      this.setState({\n        handle: profile.handle,\n        company: profile.company,\n        website: profile.website,\n        location: profile.location,\n        status: profile.status,\n        skills: skillsCSV,\n        githubusername: profile.githubusername,\n        bio: profile.bio,\n        twitter: profile.twitter,\n        facebook: profile.facebook,\n        linkedin: profile.linkedin,\n        youtube: profile.youtube,\n        instagram: profile.instagram\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const profileData = {\n      handle: this.state.handle,\n      company: this.state.company,\n      website: this.state.website,\n      location: this.state.location,\n      status: this.state.status,\n      skills: this.state.skills,\n      githubusername: this.state.githubusername,\n      bio: this.state.bio,\n      twitter: this.state.twitter,\n      facebook: this.state.facebook,\n      linkedin: this.state.linkedin,\n      youtube: this.state.youtube,\n      instagram: this.state.instagram\n    };\n    this.props.createProfile(profileData, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          errors = _this$state.errors,\n          displaySocialInputs = _this$state.displaySocialInputs;\n    let socialInputs;\n\n    if (displaySocialInputs) {\n      socialInputs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        placeholder: \"Twitter Profile URL\",\n        name: \"twitter\",\n        icon: \"fab fa-twitter\",\n        value: this.state.twitter,\n        onChange: this.onChange,\n        error: errors.twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Facebook Page URL\",\n        name: \"facebook\",\n        icon: \"fab fa-facebook\",\n        value: this.state.facebook,\n        onChange: this.onChange,\n        error: errors.facebook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Linkedin Profile URL\",\n        name: \"linkedin\",\n        icon: \"fab fa-linkedin\",\n        value: this.state.linkedin,\n        onChange: this.onChange,\n        error: errors.linkedin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"YouTube Channel URL\",\n        name: \"youtube\",\n        icon: \"fab fa-youtube\",\n        value: this.state.youtube,\n        onChange: this.onChange,\n        error: errors.youtube,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Instagram Page URL\",\n        name: \"instagram\",\n        icon: \"fab fa-instagram\",\n        value: this.state.instagram,\n        onChange: this.onChange,\n        error: errors.instagram,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }));\n    } // Select options for status\n\n\n    const options = [{\n      label: '* Select Professional Status',\n      value: 0\n    }, {\n      label: 'Developer',\n      value: 'Developer'\n    }, {\n      label: 'Junior Developer',\n      value: 'Junior Developer'\n    }, {\n      label: 'Senior Developer',\n      value: 'Senior Developer'\n    }, {\n      label: 'Manager',\n      value: 'Manager'\n    }, {\n      label: 'Student or Learning',\n      value: 'Student or Learning'\n    }, {\n      label: 'Instructor or Teacher',\n      value: 'Instructor or Teacher'\n    }, {\n      label: 'Intern',\n      value: 'Intern'\n    }, {\n      label: 'Other',\n      value: 'Other'\n    }];\n    return React.createElement(\"div\", {\n      className: \"create-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/dashboard\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, \"Go Back\"), React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(\"small\", {\n      className: \"d-block pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, \"* = required fields\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(TextFieldGroup, {\n      placeholder: \"* Profile Handle\",\n      name: \"handle\",\n      value: this.state.handle,\n      onChange: this.onChange,\n      error: errors.handle,\n      info: \"A unique handle for your profile URL. Your full name, company name, nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }), React.createElement(SelectListGroup, {\n      placeholder: \"Status\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      options: options,\n      error: errors.status,\n      info: \"Give us an idea of where you are at in your career\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Company\",\n      name: \"company\",\n      value: this.state.company,\n      onChange: this.onChange,\n      error: errors.company,\n      info: \"Could be your own company or one you work for\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Website\",\n      name: \"website\",\n      value: this.state.website,\n      onChange: this.onChange,\n      error: errors.website,\n      info: \"Could be your own website or a company one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Location\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.onChange,\n      error: errors.location,\n      info: \"City or city & state suggested (eg. Boston, MA)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"* Skills\",\n      name: \"skills\",\n      value: this.state.skills,\n      onChange: this.onChange,\n      error: errors.skills,\n      info: \"Please use comma separated values (eg.\\r HTML,CSS,JavaScript,PHP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Github Username\",\n      name: \"githubusername\",\n      value: this.state.githubusername,\n      onChange: this.onChange,\n      error: errors.githubusername,\n      info: \"If you want your latest repos and a Github link, include your username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }), React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Short Bio\",\n      name: \"bio\",\n      value: this.state.bio,\n      onChange: this.onChange,\n      error: errors.bio,\n      info: \"Tell us a little about yourself\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState(prevState => ({\n          displaySocialInputs: !prevState.displaySocialInputs\n        }));\n      },\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"Add Social Network Links\"), React.createElement(\"span\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, \"Optional\")), socialInputs, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\components\\profile-form\\EditProfile.js"],"names":["React","Component","connect","Link","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","InputGroup","SelectListGroup","createProfile","getCurrentProfile","isEmpty","CreateProfile","constructor","props","state","displaySocialInputs","handle","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","onChange","bind","onSubmit","componentDidMount","componentWillReceiveProps","nextProps","setState","profile","skillsCSV","join","social","e","preventDefault","profileData","history","target","name","value","render","socialInputs","options","label","prevState","propTypes","func","isRequired","object","mapStateToProps"],"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","sourcesContent":["// import React, { useState, Fragment, useEffect } from 'react';\r\n// import { Link, withRouter } from 'react-router-dom';\r\n// import { createProfile, getCurrentUser } from '../../actions/profile';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\n// const EditProfile = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     company: '',\r\n//     website: '',\r\n//     location: '',\r\n//     status: '',\r\n//     skills: '',\r\n//     githubusername: '',\r\n//     bio: '',\r\n//     twitter: '',\r\n//     facebook: '',\r\n//     youtube: '',\r\n//     linkedin: '',\r\n//     instagram: ''\r\n//   });\r\n//   const [dispaySocialLink, toggleSocialLink] = useState(false);\r\n//   const getProfile = useSelector(state=>state.profile);\r\n//   const {profile,loading} = getProfile;\r\n//   const dispatch = useDispatch(() => createProfile(), () => getCurrentUser());\r\n//   useEffect(\r\n//     () => {\r\n//     dispatch(getCurrentUser());\r\n//     setFormData({\r\n//       company: loading || !profile.company ? '' : profile.company,\r\n//       website: loading || !profile.website ? '' : profile.website,\r\n//       location: loading || !profile.location ? '' : profile.location,\r\n//       status: loading || !profile.status ? '' : profile.status,\r\n//       skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n//       githubusername:\r\n//         loading || !profile.githubusername ? '' : profile.githubusername,\r\n//       bio: loading || !profile.bio ? '' : profile.bio,\r\n//       twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n//       facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n//       linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n//       instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n//       youtube: loading || !profile.social ? '' : profile.social.youtube\r\n//     });\r\n//   }, [loading]);\r\n\r\n//   //destructuring\r\n//   const {\r\n//     company,\r\n//     website,\r\n//     location,\r\n//     status,\r\n//     skills,\r\n//     githubusername,\r\n//     bio,\r\n//     twitter,\r\n//     facebook,\r\n//     linkedin,\r\n//     instagram,\r\n//     youtube\r\n//   } = formData;\r\n//   const onChange = e => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value\r\n//     });\r\n//   };\r\n//   const onSubmit = e => {\r\n//     e.preventDefault();\r\n//     dispatch(createProfile(formData, true));\r\n//   };\r\n//   return (\r\n//     <Fragment>\r\n//       <h1 className='large text-primary'>Create Your Profile</h1>\r\n//       <p className='lead'>\r\n//         <i className='fas fa-user'></i> Let's get some information to make your\r\n//         profile stand out\r\n//       </p>\r\n//       <small></small>\r\n//       <form className='form' onSubmit={e => onSubmit(e)}>\r\n//         <div className='form-group'>\r\n//           <select name='status' value={status} onChange={e => onChange(e)}>\r\n//             <option value='0'>* Select Professional Status</option>\r\n//             <option value='Developer'>Developer</option>\r\n//             <option value='Junior Developer'>Junior Developer</option>\r\n//             <option value='Senior Developer'>Senior Developer</option>\r\n//             <option value='Manager'>Manager</option>\r\n//             <option value='Student or Learning'>Student or Learning</option>\r\n//             <option value='Instructor'>Instructor or Teacher</option>\r\n//             <option value='Intern'>Intern</option>\r\n//             <option value='Other'>Other</option>\r\n//           </select>\r\n//           <small className='form-text'>\r\n//             Give us an idea of where you are at in your career\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <input\r\n//             type='text'\r\n//             placeholder='Company'\r\n//             name='company'\r\n//             value={company}\r\n//             onChange={e => onChange(e)}\r\n//           />\r\n//           <small className='form-text'>\r\n//             Could be your own company or one you work for\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <input\r\n//             type='text'\r\n//             placeholder='Website'\r\n//             name='website'\r\n//             value={website}\r\n//             onChange={e => onChange(e)}\r\n//           />\r\n//           <small className='form-text'>\r\n//             Could be your own or a company website\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <input\r\n//             type='text'\r\n//             placeholder='Location'\r\n//             name='location'\r\n//             value={location}\r\n//             onChange={e => onChange(e)}\r\n//           />\r\n//           <small className='form-text'>\r\n//             City & state suggested (eg. Boston, MA)\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <input\r\n//             type='text'\r\n//             placeholder='* Skills'\r\n//             name='skills'\r\n//             value={skills}\r\n//             onChange={e => onChange(e)}\r\n//           />\r\n//           <small className='form-text'>\r\n//             Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <input\r\n//             type='text'\r\n//             placeholder='Github Username'\r\n//             name='githubusername'\r\n//             value={githubusername}\r\n//             onChange={e => onChange(e)}\r\n//           />\r\n//           <small className='form-text'>\r\n//             If you want your latest repos and a Github link, include your\r\n//             username\r\n//           </small>\r\n//         </div>\r\n//         <div className='form-group'>\r\n//           <textarea\r\n//             placeholder='A short bio of yourself'\r\n//             name='bio'\r\n//             value={bio}\r\n//             onChange={e => onChange(e)}\r\n//           ></textarea>\r\n//           <small className='form-text'>Tell us a little about yourself</small>\r\n//         </div>\r\n\r\n//         <div className='my-2'>\r\n//           <button\r\n//             type='button'\r\n//             className='btn btn-light'\r\n//             onClick={() => toggleSocialLink(!dispaySocialLink)}\r\n//           >\r\n//             Add Social Network Links\r\n//           </button>\r\n//           <span>Optional</span>\r\n//         </div>\r\n\r\n//         {dispaySocialLink && (\r\n//           <Fragment>\r\n//             <div className='form-group social-input'>\r\n//               <i className='fab fa-twitter fa-2x'></i>\r\n//               <input\r\n//                 type='text'\r\n//                 placeholder='Twitter URL'\r\n//                 name='twitter'\r\n//                 value={twitter}\r\n//                 onChange={e => onChange(e)}\r\n//               />\r\n//             </div>\r\n\r\n//             <div className='form-group social-input'>\r\n//               <i className='fab fa-facebook fa-2x'></i>\r\n//               <input\r\n//                 type='text'\r\n//                 placeholder='Facebook URL'\r\n//                 name='facebook'\r\n//                 value={facebook}\r\n//                 onChange={e => onChange(e)}\r\n//               />\r\n//             </div>\r\n\r\n//             <div className='form-group social-input'>\r\n//               <i className='fab fa-youtube fa-2x'></i>\r\n//               <input\r\n//                 type='text'\r\n//                 placeholder='YouTube URL'\r\n//                 name='youtube'\r\n//                 value={youtube}\r\n//                 onChange={e => onChange(e)}\r\n//               />\r\n//             </div>\r\n\r\n//             <div className='form-group social-input'>\r\n//               <i className='fab fa-linkedin fa-2x'></i>\r\n//               <input\r\n//                 type='text'\r\n//                 placeholder='Linkedin URL'\r\n//                 name='linkedin'\r\n//                 value={linkedin}\r\n//                 onChange={e => onChange(e)}\r\n//               />\r\n//             </div>\r\n\r\n//             <div className='form-group social-input'>\r\n//               <i className='fab fa-instagram fa-2x'></i>\r\n//               <input\r\n//                 type='text'\r\n//                 placeholder='Instagram URL'\r\n//                 name='instagram'\r\n//                 value={instagram}\r\n//                 onChange={e => onChange(e)}\r\n//               />\r\n//             </div>\r\n//           </Fragment>\r\n//         )}\r\n\r\n//         <input type='submit' className='btn btn-primary my-1' />\r\n//         <Link className='btn btn-light my-1' to='/dashboard'>\r\n//           Go Back\r\n//         </Link>\r\n//       </form>\r\n//     </Fragment>\r\n//   );\r\n// };\r\n// const mapStateToProps = state=>({\r\n//   profile:state.profile\r\n// })\r\n// export default withRouter(EditProfile);\r\n\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: '',\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.profile.profile) {\r\n      const profile = nextProps.profile.profile;\r\n\r\n      // Bring skills array back to CSV\r\n      const skillsCSV = profile.skills.join(',');\r\n\r\n      // If profile field doesnt exist, make empty string\r\n      profile.company = !isEmpty(profile.company) ? profile.company : '';\r\n      profile.website = !isEmpty(profile.website) ? profile.website : '';\r\n      profile.location = !isEmpty(profile.location) ? profile.location : '';\r\n      profile.githubusername = !isEmpty(profile.githubusername)\r\n        ? profile.githubusername\r\n        : '';\r\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\r\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\r\n      profile.twitter = !isEmpty(profile.social.twitter)\r\n        ? profile.social.twitter\r\n        : '';\r\n      profile.facebook = !isEmpty(profile.social.facebook)\r\n        ? profile.social.facebook\r\n        : '';\r\n      profile.linkedin = !isEmpty(profile.social.linkedin)\r\n        ? profile.social.linkedin\r\n        : '';\r\n      profile.youtube = !isEmpty(profile.social.youtube)\r\n        ? profile.social.youtube\r\n        : '';\r\n      profile.instagram = !isEmpty(profile.social.instagram)\r\n        ? profile.social.instagram\r\n        : '';\r\n\r\n      // Set component fields state\r\n      this.setState({\r\n        handle: profile.handle,\r\n        company: profile.company,\r\n        website: profile.website,\r\n        location: profile.location,\r\n        status: profile.status,\r\n        skills: skillsCSV,\r\n        githubusername: profile.githubusername,\r\n        bio: profile.bio,\r\n        twitter: profile.twitter,\r\n        facebook: profile.facebook,\r\n        linkedin: profile.linkedin,\r\n        youtube: profile.youtube,\r\n        instagram: profile.instagram\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"YouTube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for status\r\n    const options = [\r\n      { label: '* Select Professional Status', value: 0 },\r\n      { label: 'Developer', value: 'Developer' },\r\n      { label: 'Junior Developer', value: 'Junior Developer' },\r\n      { label: 'Senior Developer', value: 'Senior Developer' },\r\n      { label: 'Manager', value: 'Manager' },\r\n      { label: 'Student or Learning', value: 'Student or Learning' },\r\n      { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\r\n      { label: 'Intern', value: 'Intern' },\r\n      { label: 'Other', value: 'Other' }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"create-profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Edit Profile</h1>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"A unique handle for your profile URL. Your full name, company name, nickname\"\r\n                />\r\n                <SelectListGroup\r\n                  placeholder=\"Status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  options={options}\r\n                  error={errors.status}\r\n                  info=\"Give us an idea of where you are at in your career\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Could be your own company or one you work for\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Could be your own website or a company one\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"City or city & state suggested (eg. Boston, MA)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubusername}\r\n                  info=\"If you want your latest repos and a Github link, include your username\"\r\n                />\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Short Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(CreateProfile)\r\n);"]},"metadata":{},"sourceType":"module"}