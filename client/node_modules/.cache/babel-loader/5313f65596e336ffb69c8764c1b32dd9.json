{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\social\\\\socialapp\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { getPost } from \"../../actions/post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"../layouts/Spinner\";\nimport PostItems from \"../posts/PostItems\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({\n  match\n}) => {\n  const dispatch = useDispatch(() => getPost());\n  const fetchPost = useSelector(state => state.post);\n  const loading = fetchPost.loading,\n        post = fetchPost.post;\n  useEffect(() => dispatch(getPost(match.params.id)), [dispatch]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(PostItems, {\n    post: post,\n    showActions: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n};\n\nPost.protoTypes = {\n  getPost: PropTypes.func,\n  fetchPost: PropTypes.object\n};\nexport default Post;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\components\\post\\Post.js"],"names":["React","Fragment","useEffect","getPost","useDispatch","useSelector","PropTypes","Spinner","PostItems","CommentForm","CommentItem","Post","match","dispatch","fetchPost","state","post","loading","params","id","_id","comments","map","comment","protoTypes","func","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,QAAQ,GAAGT,WAAW,CAAC,MAAMD,OAAO,EAAd,CAA5B;AACA,QAAMW,SAAS,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B;AAF0B,QAGlBC,OAHkB,GAGAH,SAHA,CAGlBG,OAHkB;AAAA,QAGTD,IAHS,GAGAF,SAHA,CAGTE,IAHS;AAK1Bd,EAAAA,SAAS,CAAC,MAAMW,QAAQ,CAACV,OAAO,CAACS,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAR,CAAf,EAA2C,CAACN,QAAD,CAA3C,CAAT;AACA,SAAOI,OAAO,IAAID,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAuB,IAAA,WAAW,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACI,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAEP,IAAI,CAACI,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAHF,CAHF;AAaD,CAnBD;;AAoBAT,IAAI,CAACa,UAAL,GAAkB;AAChBrB,EAAAA,OAAO,EAAEG,SAAS,CAACmB,IADH;AAEhBX,EAAAA,SAAS,EAAER,SAAS,CAACoB;AAFL,CAAlB;AAIA,eAAef,IAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { getPost } from \"../../actions/post\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport PostItems from \"../posts/PostItems\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentItem from \"./CommentItem\";\r\nconst Post = ({ match }) => {\r\n  const dispatch = useDispatch(() => getPost());\r\n  const fetchPost = useSelector(state => state.post);\r\n  const { loading, post } = fetchPost;\r\n\r\n  useEffect(() => dispatch(getPost(match.params.id)), [dispatch]);\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <PostItems post={post} showActions={true} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nPost.protoTypes = {\r\n  getPost: PropTypes.func,\r\n  fetchPost: PropTypes.object\r\n};\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}