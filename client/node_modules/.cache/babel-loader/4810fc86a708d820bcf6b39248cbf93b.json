{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\social\\\\socialapp\\\\client\\\\src\\\\components\\\\posts\\\\PostItems.js\";\nimport React, { Fragment } from \"react\";\nimport Moment from \"react-moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst PostItems = ({\n  post: {\n    _id,\n    name,\n    avatar,\n    text,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  return React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"profile.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, text), React.createElement(\"p\", {\n    class: \"post-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Posted on \", React.createElement(Moment, {\n    format: \"YYYY-MM-DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, date)), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \" \", likes.length > 0 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"likes.length\")), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-thumbs-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Link, {\n    href: \"post.html\",\n    class: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Discussion\", \" \", comments.length > 0 && React.createElement(\"span\", {\n    class: \"comment-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nexport default PostItems;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\components\\posts\\PostItems.js"],"names":["React","Fragment","Moment","useSelector","useDispatch","PostItems","post","_id","name","avatar","text","user","likes","comments","date","dispatch","auth","state","length","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA;AAAlD;AADW,CAAD,KAEZ;AACJ,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,SACE;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAuB,IAAA,GAAG,EAAEP,MAA5B;AAAoC,IAAA,GAAG,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBE,IAAjB,CADF,EAEE;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BI,IAA7B,CADZ,CAFF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACmC,GADnC,EAEGF,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFvB,CALF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAYE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,WAAX;AAAuB,IAAA,KAAK,EAAC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,EAEGL,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IACC;AAAM,IAAA,KAAK,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,QAAQ,CAACK,MAAtC,CAHJ,CAZF,EAkBG,CAACF,IAAI,CAACG,OAAN,IAAiBR,IAAI,KAAKK,IAAI,CAACL,IAAL,CAAUJ,GAApC,IACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBJ,CAPF,CADF;AAkCD,CAvCD;;AAwCA,eAAeF,SAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst PostItems = ({\r\n  post: { _id, name, avatar, text, user, likes, comments, date }\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  return (\r\n    <div class='post bg-white p-1 my-1'>\r\n      <div>\r\n        <a href='profile.html'>\r\n          <img class='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <p class='my-1'>{text}</p>\r\n        <p class='post-date'>\r\n          Posted on <Moment format='YYYY-MM-DD'>{date}</Moment>\r\n        </p>\r\n        <button type='button' class='btn btn-light'>\r\n          <i class='fas fa-thumbs-up'></i>{\" \"}\r\n          {likes.length > 0 && <span>likes.length</span>}\r\n        </button>\r\n        <button type='button' class='btn btn-light'>\r\n          <i class='fas fa-thumbs-down'></i>\r\n        </button>\r\n        <Link href='post.html' class='btn btn-primary'>\r\n          Discussion{\" \"}\r\n          {comments.length > 0 && (\r\n            <span class='comment-count'>{comments.length}</span>\r\n          )}\r\n        </Link>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button type='button' class='btn btn-danger'>\r\n            <i class='fas fa-times'></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PostItems;\r\n"]},"metadata":{},"sourceType":"module"}