{"ast":null,"code":"import { GET_PROFILE, PROFILE_ERROR } from '../actions/types';\nimport axios from 'axios';\nimport { useDispatch } from 'react-dom';\nexport const getCurrentUser = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Creating profile\n\nexport const createProfile = (formData, edit, history) => async dispatch => {\n  const dispatchAlert = useDispatch(() => setAlert());\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'profile has been updated!' : 'profile has been created!', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatchAlert(setAlert(error.msg, 'danger')));\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\actions\\profile.js"],"names":["GET_PROFILE","PROFILE_ERROR","axios","useDispatch","getCurrentUser","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","edit","history","dispatchAlert","setAlert","config","headers","post","push","errors","forEach","error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,iBAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,aADC;AAEPQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,OAAjB,KAA6B,MAAMd,QAAN,IAAkB;AAC1E,QAAMe,aAAa,GAAGjB,WAAW,CAAC,MAAMkB,QAAQ,EAAf,CAAjC;;AACA,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMjB,GAAG,GAAG,MAAMJ,KAAK,CAACsB,IAAN,CAAW,cAAX,EAA2BP,QAA3B,EAAqCK,MAArC,CAAlB;AACAjB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CACNgB,QAAQ,CACNH,IAAI,GAAG,2BAAH,GAAiC,2BAD/B,EAEN,SAFM,CADF,CAAR;;AAMA,QAAI,CAACA,IAAL,EAAW;AACTC,MAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACD;AACF,GApBD,CAoBE,OAAOd,GAAP,EAAY;AACZ,UAAMe,MAAM,GAAGf,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBgB,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIR,aAAa,CAACC,QAAQ,CAACO,KAAK,CAAChB,GAAP,EAAY,QAAZ,CAAT,CAArC;AACD;AACF;AACF,CA5BM","sourcesContent":["import { GET_PROFILE, PROFILE_ERROR } from '../actions/types';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-dom';\r\n\r\nexport const getCurrentUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Creating profile\r\n\r\nexport const createProfile = (formData, edit, history) => async dispatch => {\r\n  const dispatchAlert = useDispatch(() => setAlert());\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const res = await axios.post('/api/profile', formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(\r\n      setAlert(\r\n        edit ? 'profile has been updated!' : 'profile has been created!',\r\n        'success'\r\n      )\r\n    );\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatchAlert(setAlert(error.msg, 'danger')));\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}