{"ast":null,"code":"import { GET_PROFILE, GET_PROFILES, GET_GITHUB, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from \"../actions/types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\"; //Get Current Profile\n\nexport const getCurrentUser = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Getting All profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: PROFILE_ERROR\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile By User Id\n\nexport const getProfileByUserId = userId => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/user/\".concat(userId));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Getting gitHub repos\n\nexport const getGithub = username => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/github/\".concat(username));\n    dispatch({\n      type: GET_GITHUB,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Creating profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"profile has been updated!\" : \"profile has been created!\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n  }\n}; //Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Educations has been Added to Your Profile\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience has been Added to Your Profile\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Deleted!!!\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Deleting Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Deleted!!!\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Deleting Account\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you Sure???\")) {\n    try {\n      await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\actions\\profile.js"],"names":["GET_PROFILE","GET_PROFILES","GET_GITHUB","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","axios","setAlert","getCurrentUser","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileByUserId","userId","getGithub","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addEducation","put","addExperience","deleteEducation","id","delete","deleteExperience","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_GITHUB,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n//Get Current Profile\r\nexport const getCurrentUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Getting All profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({\r\n    type: PROFILE_ERROR\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n//Get profile By User Id\r\nexport const getProfileByUserId = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Getting gitHub repos\r\nexport const getGithub = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n    dispatch({\r\n      type: GET_GITHUB,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n// Creating profile\r\n\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(\r\n      setAlert(\r\n        edit ? \"profile has been updated!\" : \"profile has been created!\",\r\n        \"success\"\r\n      )\r\n    );\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n  }\r\n};\r\n//Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"Educations has been Added to Your Profile\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Add Experience\r\n\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience has been Added to Your Profile\", \"success\"));\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Education\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"Education Deleted!!!\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Deleting Experience\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"Experience Deleted!!!\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Deleting Account\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm(\"Are you Sure???\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n      dispatch({\r\n        type: CLEAR_PROFILE\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}