{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKE, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; //Adding post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    setAlert(\"New Post Added...\", \"success\");\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //getting all post\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get Post\n\nexport const getPost = id => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id), formData, config);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/unlike/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Deleting Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    setAlert(\"Post Deleted...\", \"success\");\n  } catch (err) {\n    dispatch({\n      type: DELETE_POST,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //adding comment\n\nexport const addComment = postId => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/posts/comment/\".concat(postId));\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(\"comment added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\social\\socialapp\\client\\src\\actions\\post.js"],"names":["axios","setAlert","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKE","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","addPost","formData","dispatch","config","headers","res","post","type","payload","data","err","msg","response","statusText","status","getPosts","get","getPost","id","addLike","put","likes","removeLike","deletePost","delete","addComment","postId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,SATP,C,CAWA;;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAkB;AACnD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,eAAyBL,QAAzB,EAAmCE,MAAnC,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,QADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAlB,IAAAA,QAAQ,CAAC,mBAAD,EAAsB,SAAtB,CAAR;AACD,GAPD,CAOE,OAAOmB,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAnBM,C,CAqBP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMb,QAAN,IAAkB;AAC9C,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMf,KAAK,CAAC0B,GAAN,CAAU,YAAV,CAAlB;AACAd,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEf,SADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAcP;;AACA,OAAO,MAAMG,OAAO,GAAGC,EAAE,IAAI,MAAMhB,QAAN,IAAkB;AAC7C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,KAAK,CAAC0B,GAAN,sBAAwBE,EAAxB,GAA8BjB,QAA9B,EAAwCE,MAAxC,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEd,QADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAlBM,C,CAmBP;;AACA,OAAO,MAAMK,OAAO,GAAGD,EAAE,IAAI,MAAMhB,QAAN,IAAkB;AAC7C,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMf,KAAK,CAAC8B,GAAN,2BAA6BF,EAA7B,EAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,WADC;AAEPa,MAAAA,OAAO,EAAE;AAAEU,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAEhB,GAAG,CAACI;AAAjB;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AAEA,OAAO,MAAMQ,UAAU,GAAGJ,EAAE,IAAI,MAAMhB,QAAN,IAAkB;AAChD,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMf,KAAK,CAAC8B,GAAN,6BAA+BF,EAA/B,EAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,WADC;AAEPa,MAAAA,OAAO,EAAE;AAAEU,QAAAA,EAAF;AAAMG,QAAAA,KAAK,EAAEhB,GAAG,CAACI;AAAjB;AAFF,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AAEA,OAAO,MAAMS,UAAU,GAAGL,EAAE,IAAI,MAAMhB,QAAN,IAAkB;AAChD,MAAI;AACF,UAAMZ,KAAK,CAACkC,MAAN,sBAA2BN,EAA3B,EAAN;AACAhB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEU;AAFF,KAAD,CAAR;AAIA3B,IAAAA,QAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAR;AACD,GAPD,CAOE,OAAOmB,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AAEA,OAAO,MAAMW,UAAU,GAAGC,MAAM,IAAI,MAAMxB,QAAN,IAAkB;AACpD,MAAI;AACF,UAAMG,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,8BAAiCoB,MAAjC,EAAlB;AACAxB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAACX,QAAQ,CAAC,eAAD,EAAkB,SAAlB,CAAT,CAAR;AACD,GAPD,CAOE,OAAOmB,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKE,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"./types\";\r\n\r\n//Adding post\r\n\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.post(`/api/posts`, formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n    setAlert(\"New Post Added...\", \"success\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//getting all post\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n//get Post\r\nexport const getPost = id => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`, formData, config);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n//add Like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKE,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Remove Like\r\n\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKE,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Deleting Post\r\n\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n    setAlert(\"Post Deleted...\", \"success\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//adding comment\r\n\r\nexport const addComment = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`/api/posts/comment/${postId}`);\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"comment added\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}